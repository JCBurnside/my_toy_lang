let test_ifs a b : bool -> bool -> int32 =
    if a then
        print_str "a\n";
    else if b then
        print_str "b\n";
    else
        print_str "neither\n";
    return 0;

for<T> let eq_check a b : T -> T -> bool = a < b || a > b

let test_ifexpr a b : bool -> bool -> int32 = if a then 
        0 
    else if b then 
        1 
    else if true then 
        let x : int32 = 2;
        x
    else if a == b then
        3
    else
        4

let show_short_curicuit _ : () -> () =
    if (show_something ()) && (show_something_else ()) then
        print_str "this is a seperator\n";
    if (show_something ()) || (show_something_else ()) then
        print_str "another seperator\n";
    if (show_something_else ()) || (show_something ()) then
        print_str "yet another seperator\n";
    return ();

let show_something _ : () -> bool =
    print_str "hello there\n";
    return true;

let show_something_else _ : () -> bool =
    print_str "general kenobi\n";
    return false;

let main _ : () -> () =
    let a : bool = true;
    match 0 where
    | 1 -> print_str "one",
    | 2 -> print_str "two",
    print_str "main";
    show_short_curicuit ();
    return ();